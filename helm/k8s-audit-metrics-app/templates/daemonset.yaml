apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ tpl .Values.resource.default.name  . }}
  namespace: {{ tpl .Values.resource.default.namespace  . }}
  labels:
    {{- include "k8s-audit-metrics.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "k8s-audit-metrics.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        releaseRevision: {{ .Release.Revision | quote }}
      labels:
        {{- include "k8s-audit-metrics.selectorLabels" . | nindent 8 }}
    spec:
      tolerations:
      # Tolerate master taint
      - key: node-role.kubernetes.io/master
        operator: Exists
        effect: NoSchedule
      nodeSelector:
        kubernetes.io/role: master
      volumes:
      - name: {{ tpl .Values.resource.default.name  . }}-configmap
        configMap:
          name: {{ tpl .Values.resource.default.name  . }}
          items:
          - key: config.yaml
            path: config.yaml
      - name: certs
        hostPath:
          path: /etc/ssl/certs/ca-certificates.crt
      - name: varlog
        hostPath:
          path: /var/log
      serviceAccountName: {{ tpl .Values.resource.default.name  . }}
      securityContext:
        runAsUser: {{ .Values.pod.user.id }}
        runAsGroup: {{ .Values.pod.group.id }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.Installation.V1.Registry.Domain }}/{{ .Values.image.name }}:{{ .Values.image.tag }}"
        volumeMounts:
        - name: varlog
          mountPath: /var/log
          readOnly: true
        - name: {{ tpl .Values.resource.default.name  . }}-configmap
          mountPath: /var/run/{{ .Chart.Name }}/configmap/
        - name: certs
          mountPath: /etc/ssl/certs/ca-certificates.crt
          readOnly: true
        ports:
        - name: http
          containerPort: 8000
        args:
        - /var/log/apiserver/audit.log
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 15
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8000
          initialDelaySeconds: 15
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 250m
            memory: 250Mi
          limits:
            cpu: 250m
            memory: 250Mi
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
